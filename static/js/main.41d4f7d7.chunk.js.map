{"version":3,"sources":["Components/HomeComponent.jsx","Components/history.js","Components/QuizComponent.jsx","Components/ResultComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomeComponent","className","id","to","Component","createBrowserHistory","QuizComponent","answer","e","rightAnswer","wrongAnswer","state","questions","currentQuestion","target","innerText","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","array","attemptedAnswers","next","setState","rightAnswers","wrongAnswers","stopQuiz","attemptedAnswersFiltered","filter","params","URLSearchParams","append","length","url","toString","history","push","previous","this","question","onClick","options","newestOnTop","rtl","pauseOnFocusLoss","ResultComponent","window","location","search","get","Math","ceil","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41d4f7d7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Css/HomeComponent.css\";\nimport {Link} from 'react-router-dom';\n\nclass HomeComponent extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"home-component\">\n          <h1>Quiz App</h1>\n          <Link id=\"play-button\" to=\"/quiz\">PLAY</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeComponent;\n","import {createBrowserHistory} from 'history';\nexport default createBrowserHistory();","import React, { Component } from \"react\";\nimport \"../Css/QuizComponent.css\";\nimport questions from \"../questions.json\";\nimport history from \"./history\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass QuizComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rightAnswers: 0,\n      wrongAnswers: 0,\n      currentQuestion: 0,\n      questions: [...questions],\n      attemptedAnswers: [],\n    };\n  }\n  answer = (e) => {\n    //two variable to hold weather answer is right or wrong\n    let rightAnswer = 0;\n    let wrongAnswer = 0;\n\n    //temporary array for holding the answers\n    if (\n      this.state.questions[this.state.currentQuestion].answer !==\n      e.target.innerText\n    ) {\n      wrongAnswer = 1;\n      toast.error(\"Wrong answer!\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      rightAnswer = 1;\n      toast.success(\"Right answer!\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n\n    let array = this.state.attemptedAnswers;\n    //updating the answers entered by the user into the temparory array with the index of the current question\n    array[this.state.currentQuestion] = e.target.innerText;\n\n    this.next();\n    //changing the state questions with the temporary array\n    this.setState({\n      attemptedAnswers: array,\n      rightAnswers: this.state.rightAnswers + rightAnswer,\n      wrongAnswers: this.state.wrongAnswers + wrongAnswer,\n    });\n  };\n  stopQuiz=()=>{\n    //Filtering the attempted answers and removing empty one (not answered ones)\n    const attemptedAnswersFiltered = this.state.attemptedAnswers.filter(\n      (answer) => {\n        return answer !== \"\";\n      }\n    );\n    let params = new URLSearchParams();\n    params.append(\"attemptedAnswers\", attemptedAnswersFiltered.length);\n    params.append(\"rightAnswers\", this.state.rightAnswers);\n    params.append(\"wrongAnswers\", this.state.wrongAnswers);\n    var url = \"/result?\" + params.toString();\n    history.push(url);\n  }\n  next = () => {\n    if (this.state.currentQuestion < this.state.questions.length - 1) {\n      this.setState({ currentQuestion: this.state.currentQuestion + 1 });\n    } else {\n      this.stopQuiz();\n    }\n  };\n  previous = () => {\n    if (this.state.currentQuestion > 0)\n      this.setState({ currentQuestion: this.state.currentQuestion - 1 });\n  };\n  render() {\n    return (\n      <div className=\"quiz-component\">\n        <div className=\"white-panel\">\n          <div className=\"question-panel\">\n            <h1>Question</h1>\n            <div>\n              <p>\n                {this.state.currentQuestion + 1} of{\" \"}\n                {this.state.questions.length}\n              </p>\n              <p>{this.state.questions[this.state.currentQuestion].question}</p>\n            </div>\n          </div>\n          <div className=\"option-panel\">\n            <button onClick={(e) => this.answer(e)}>\n              {this.state.questions[this.state.currentQuestion].options[0]}\n            </button>\n            <button onClick={(e) => this.answer(e)}>\n              {this.state.questions[this.state.currentQuestion].options[1]}\n            </button>\n            <button onClick={(e) => this.answer(e)}>\n              {this.state.questions[this.state.currentQuestion].options[2]}\n            </button>\n            <button onClick={(e) => this.answer(e)}>\n              {this.state.questions[this.state.currentQuestion].options[3]}\n            </button>\n          </div>\n          <div className=\"button-panel\">\n            <button id=\"previous\" onClick={() => this.previous()}>\n              Previous\n            </button>\n            <button id=\"next\" onClick={() => this.next()}>\n              Next\n            </button>\n            <button id=\"clear\" onClick={()=>this.stopQuiz()}>Quit</button>\n          </div>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n          {/* Same as */}\n          <ToastContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuizComponent;\n","import React, { Component } from \"react\";\nimport \"../Css/ResultComponent.css\";\nimport { Link } from \"react-router-dom\";\n\nclass ResultComponent extends Component {\n  render() {\n    var params = new URLSearchParams(window.location.search),\n      attemptedAnswers = params.get(\"attemptedAnswers\"),\n      rightAnswers = params.get(\"rightAnswers\"),\n      wrongAnswers = params.get(\"wrongAnswers\");\n    return (\n      <div className=\"result-component\">\n        <i className=\"far fa-check-circle check-mark\"></i>\n        <h2 id=\"result\">Result</h2>\n        <div className=\"result-white-panel\">\n          <h1>Your score: {Math.ceil((rightAnswers * 100) / 15)}%</h1>\n          <div id=\"details\">\n            <div className=\"info\">\n              <p>Total number of questions:</p>\n              <p>Number of attempted questions:</p>\n              <p>Number of correct answers:</p>\n              <p>Number of wrong answes:</p>\n            </div>\n            <div className=\"score\">\n              <p>15</p>\n              <p>{attemptedAnswers}</p>\n              <p>{rightAnswers}</p>\n              <p>{wrongAnswers}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"buttons\">\n          <button id=\"play\">\n            <Link to=\"/quiz\">Play again</Link>\n          </button>\n          <button id=\"back\">\n            <Link to=\"/\">Back to home</Link>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResultComponent;\n","import \"./App.css\";\nimport HomeComponent from \"./Components/HomeComponent\";\nimport QuizComponent from \"./Components/QuizComponent\";\nimport ResultComponent from \"./Components/ResultComponent\"\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./Components/history\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomeComponent />\n          </Route>\n          <Route exact path=\"/quiz\">\n            <QuizComponent/>\n          </Route>\n          <Route exact path=\"/result\">\n            <ResultComponent/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}